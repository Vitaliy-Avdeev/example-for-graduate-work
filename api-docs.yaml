openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /users/set_password:
    post:
      tags:
      - Пользователи
      summary: Обновление пароля
      operationId: setPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPassword'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                type: object
  /register:
    post:
      tags:
      - Регистрация
      summary: Регистрация пользователя
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                type: object
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
  /login:
    post:
      tags:
      - Авторизация
      summary: Авторизация пользователя
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
  /ads:
    get:
      tags:
      - Объявления
      summary: Получение всех объявлений
      operationId: getAllAds
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ads'
    post:
      tags:
      - Объявления
      summary: Добавить объявление
      operationId: addAd
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAd'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ad'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Ads'
  /ads/{id}/comments:
    get:
      tags:
      - Комментарии
      summary: Получить комментарии объявления
      operationId: getComments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comments'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comments'
        "404":
          description: Not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comments'
    post:
      tags:
      - Комментарии
      summary: Добавить комментарий к объявлению
      operationId: addComment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateComment'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comment'
        "404":
          description: Not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comment'
  /users/me:
    get:
      tags:
      - Пользователи
      summary: Получить информацию об авторизованном пользователе
      operationId: getUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
    patch:
      tags:
      - Пользователи
      summary: Обновление информации об авторизованном пользователе
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUser'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
  /users/me/image:
    patch:
      tags:
      - Пользователи
      summary: Обновить аватар авторизованного пользователя
      operationId: updateUserImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - image
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
  /ads/{id}:
    get:
      tags:
      - Объявления
      summary: Получить информацию об объявлении
      operationId: getAds
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtendedAd'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExtendedAd'
        "404":
          description: Not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExtendedAd'
    delete:
      tags:
      - Объявления
      summary: Удалить объявление
      operationId: removeAd
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No Content
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                type: object
        "404":
          description: Not found
          content:
            '*/*':
              schema:
                type: object
    patch:
      tags:
      - Объявления
      summary: Обновить информацию об объявлении
      operationId: updateAds
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateAd'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ad'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Ads'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Ads'
  /ads/{id}/image:
    patch:
      tags:
      - Объявления
      summary: Обновить картинку объявления
      operationId: updateImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - image
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/octet-stream: {}
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
        "404":
          description: Not found
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /ads/{adId}/comments/{commentId}:
    delete:
      tags:
      - Комментарии
      summary: Удалить комментарий
      operationId: deleteComment
      parameters:
      - name: adId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: commentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                type: object
        "404":
          description: Not found
          content:
            '*/*':
              schema:
                type: object
    patch:
      tags:
      - Комментарии
      summary: Обновить комментарий
      operationId: updateComment
      parameters:
      - name: adId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: commentId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateComment'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comment'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comment'
        "404":
          description: Not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comment'
  /ads/me:
    get:
      tags:
      - Объявления
      summary: Получить объявления авторизованного пользователя
      operationId: getAdsMe
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ads'
        "401":
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Ad'
components:
  schemas:
    NewPassword:
      type: object
      properties:
        currentPassword:
          maxLength: 16
          minLength: 8
          type: string
        newPassword:
          maxLength: 16
          minLength: 8
          type: string
    Register:
      type: object
      properties:
        username:
          maxLength: 32
          minLength: 4
          type: string
        password:
          maxLength: 16
          minLength: 8
          type: string
        firstName:
          maxLength: 16
          minLength: 2
          type: string
        lastName:
          maxLength: 16
          minLength: 2
          type: string
        phone:
          pattern: "\\+7\\s?\\(?\\d{3}\\)?\\s?\\d{3}-?\\d{2}-?\\d{2}"
          type: string
        role:
          type: string
          enum:
          - USER
          - ADMIN
    Login:
      type: object
      properties:
        username:
          maxLength: 32
          minLength: 4
          type: string
        password:
          maxLength: 16
          minLength: 8
          type: string
    CreateOrUpdateAd:
      type: object
      properties:
        title:
          maxLength: 32
          minLength: 4
          type: string
        price:
          type: integer
          format: int32
        description:
          maxLength: 64
          minLength: 8
          type: string
    Ad:
      type: object
      properties:
        count:
          type: integer
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/Ads'
    Ads:
      type: object
      properties:
        author:
          type: integer
          format: int32
        image:
          type: string
        pk:
          type: integer
          format: int32
        price:
          type: integer
          format: int32
        title:
          type: string
    CreateOrUpdateComment:
      type: object
      properties:
        text:
          maxLength: 64
          minLength: 8
          type: string
    Comment:
      type: object
      properties:
        author:
          type: integer
          format: int32
        authorImage:
          type: string
        authorFirstName:
          type: string
        createdAt:
          type: integer
          format: int64
        pk:
          type: integer
          format: int32
        text:
          type: string
    UpdateUser:
      type: object
      properties:
        firstName:
          maxLength: 10
          minLength: 3
          type: string
        lastName:
          maxLength: 10
          minLength: 10
          type: string
        phone:
          pattern: "\\+7\\s?\\(?\\d{3}\\)?\\s?\\d{3}-?\\d{2}-?\\d{2}"
          type: string
    UserDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
        image:
          type: string
        role:
          type: string
          enum:
          - USER
          - ADMIN
    ExtendedAd:
      type: object
      properties:
        pk:
          type: integer
          format: int32
        authorFirstName:
          type: string
        authorLastName:
          type: string
        description:
          type: string
        email:
          type: string
        image:
          type: string
        phone:
          type: string
        price:
          type: integer
          format: int32
        title:
          type: string
    Comments:
      type: object
      properties:
        count:
          type: integer
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
